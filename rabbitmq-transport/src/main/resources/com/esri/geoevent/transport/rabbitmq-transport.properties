PROJECT_RELEASE=5
# Connection Info
TRANSPORT_HOST_LBL=Host
TRANSPORT_HOST_DESC=Host
TRANSPORT_VIRTUAL_HOST_LBL=Virtual Host
TRANSPORT_VIRTUAL_HOST_DESC=Virtual Host
TRANSPORT_PORT_LBL=Port
TRANSPORT_PORT_DESC=Port (Default: 5672, Default SSL: 5671)
TRANSPORT_USERNAME_LBL=User name
TRANSPORT_USERNAME_DESC=User name
TRANSPORT_PASSWORD_LBL=Password
TRANSPORT_PASSWORD_DESC=Password
TRANSPORT_SSL_LBL=SSL
TRANSPORT_SSL_DESC=Use SSL?

# Exchange
TRANSPORT_EXCHANGE_NAME_LBL=Exchange Name
TRANSPORT_EXCHANGE_NAME_DESC=Exchange Name
TRANSPORT_EXCHANGE_TYPE_LBL=Exchange Type
TRANSPORT_EXCHANGE_TYPE_DESC=Exchange Type
TRANSPORT_EXCHANGE_DURABILITY_LBL=Exchange Durability
TRANSPORT_EXCHANGE_DURABILITY_DESC=Durable exchanges survive broker restart whereas transient exchanges do not.
TRANSPORT_EXCHANGE_AUTO_DELETE_LBL= Exchange Auto-delete
TRANSPORT_EXCHANGE_AUTO_DELETE_DESC=If 'true', the exchange will delete itself after at least one queue or exchange has been bound to this one, and then all queues or exchanges have been unbound.

# Queue
TRANSPORT_IN_QUEUE_NAME_LBL=Queue Name
TRANSPORT_IN_QUEUE_NAME_DESC=Queue Name
TRANSPORT_IN_QUEUE_DURABILITY_LBL=Queue Durability
TRANSPORT_IN_QUEUE_DURABILITY_DESC=Durable queues survive broker restart whereas transient queues do not.
TRANSPORT_IN_QUEUE_EXCLUSIVE_LBL=Exclusive Queue
TRANSPORT_IN_QUEUE_EXCLUSIVE_DESC=Exclusive Queue is used by only one connection and will be deleted when that connection closes.
TRANSPORT_IN_QUEUE_AUTO_DELETE_LBL=Queue Auto-delete
TRANSPORT_IN_QUEUE_AUTO_DELETE_DESC=If 'true', the queue will delete itself after at least one consumer has connected, and then all consumers have disconnected.


# SERVER CERTIFICATE & AUTHENTICATION

SERVER_PROVIDE_CA_LBL=Provide trusted client certificate
SERVER_PROVIDE_CA_DESC=If the trusted server certificate can be provided

SERVER_CERT_FILE_LOC_LBL=File Location CA (Server CER)
SERVER_CERT_FILE_LOC_DESC=Provide a server certificate that will be used as trusted CA CERT

SERVER_CERT_FILE_NAME_LBL=Filename CA (Server CER)
SERVER_CERT_FILE_NAME_DESC=Filename of the Server Certificate *.CER

AUTH_TYPE_LBL=Authentication type
AUTH_TYPE_DESC=Defines if username & passwort or a certificate based authentication should be used.
      
AUTH_CLIENT_CERT_FILE_LOC_LBL=File Location (Client PFX, PKCS12)
AUTH_CLIENT_CERT_FILE_LOC_DESC=File Location where the client certificate is stored that will be used for authentication

AUTH_CLIENT_CERT_FILE_NAME_LBL=Filename (Client PFX, PKCS12)
AUTH_CLIENT_CERT_FILE_NAME_DESC=Filename of the client certificate that will be used for authentication

AUTH_CLIENT_CERT_PASS_LBL=Password (Client PFX, PKCS12)
AUTH_CLIENT_CERT_PASS_DESC=Password of the client certificate that will be used for authentication

# Inbound Transport Definition
TRANSPORT_IN_LABEL=RabbitMQ Inbound Transport
TRANSPORT_IN_DESC=JMS Inbound Transport for connecting to RabbitMQ message servers.
TRANSPORT_IN_QOS_LBL=Quality of Service
TRANSPORT_IN_QOS_DESC=Tell RabbitMQ how many unacknowledged messages each worker can handle at a time.
TRANSPORT_IN_ROUTING_KEY_LBL=Routing Key
TRANSPORT_IN_ROUTING_KEY_DESC=Routing Key
TRANSPORT_IN_INIT_ERROR=Failed to define properties of RabbitMQ inbound transport. Error: {0}.

# Outbound Transport Definition
TRANSPORT_OUT_LABEL=RabbitMQ Outbound Transport
TRANSPORT_OUT_DESC=JMS Outbound Transport for connecting to RabbitMQ message servers.
TRANSPORT_OUT_INIT_ERROR=Failed to define properties of RabbitMQ outbound transport. Error: {0}.
TRANSPORT_OUT_NO_MESSAGE_TO_SEND_ERROR=No message to send.
TRANSPORT_OUT_FAILED_TO_SEND_MESSAGE_ERROR=Outbound transport failed to send a message.
TRANSPORT_OUT_ROUTING_KEY_LBL=Routing Key
TRANSPORT_OUT_ROUTING_KEY_DESC=Routing Key

# Log Messages
CONNECTION_HOST_VALIDATE_ERROR=Host name is invalid.
CONNECTION_PORT_VALIDATE_ERROR=Port number is invalid.
CONNECTION_ESTABLISH_SUCCESS=Connection to rabbit@{0} successfully established.
CONNECTION_ESTABLISH_FAILURE=Connection to rabbit@{0} cannot be established. Error: {1}.
CONNECTION_RECOVERED=Connection to rabbit@{0} recovered.
CONNECTION_RECOVERY_STARTED=Connection to rabbit@{0} started recovering.
CONNECTION_RECOVERY_COMPLETED=Connection to rabbit@{0} finished recovering.
CONNECTION_RECOVERY_FAILED=Connection to rabbit@{0} failed recovering. Error: {1}.
CONNECTION_BROKEN_ERROR=Connection to rabbit@{0} is broken.
CONNECTION_BROKEN_WITH_CAUSE_ERROR=Connection to rabbit@{0} is broken. Cause: {1}.
CONNECTION_CLOSE_ERROR=Failed to close connection to rabbit@{0} on shutdown. Error: {1}.
CHANNEL_CREATED=Channel({0}) successfully created.
CHANNEL_CREATION_FAILED=Channel creation failed. Error: {0}.
CHANNEL_RECOVERED=Channel({0}) recovered.
CHANNEL_RECOVERY_STARTED=Channel({0}) started recovering.
CHANNEL_RECOVERY_COMPLETED=Channel({0}) finished recovering.
CHANNEL_RECOVERY_FAILED=Channel({0}) failed recovering. Error: {1}.
CHANNEL_CREATE_ERROR=Failed to create new channel. Error: {0}.
CHANNEL_INIT_ERROR=Failed to initialize a channel. Error: {0}.
CHANNEL_CLOSE_ERROR=Failed to close channel while disconnecting from RabbitMQ. Error: {0}.
EXCHANGE_CREATE_ERROR=Failed to declare RabbitMQ exchange. Error: {0}.
EXCHANGE_VALIDATE_ERROR=Failed to validate RabbitMQ exchange. Exchange name is invalid.
QUEUE_NAME_VALIDATE_ERROR=Failed to validate RabbitMQ queue. Queue name is invalid.
CONSUMER_INIT_ERROR=Failed to initialize message consumer. Error: {0}.
CONSUMER_CANCEL_ERROR=Failed to stop message consumer. Error: {0}.
CONSUMER_RECOVERY_STARTED=Consumer from channel({0}) started recovering.
CONSUMER_RECOVERY_COMPLETED=Consumer from channel({0}) completed recovering.
CONSUMER_RECOVERY_FAILED=Consumer from channel({0}) failed recovering. Error: {1}.
